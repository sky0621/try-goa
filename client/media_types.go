// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "fs": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/sky0621/try-goa/fs
// --out=$(GOPATH)\src\github.com\sky0621\try-goa
// --version=v1.3.0

package client

import (
	"github.com/goadesign/goa"
	"net/http"
)

// Movie Response Type (default view)
//
// Identifier: application/vnd.movie+json; view=default
type Movie struct {
	// Unique Movie ID
	MovieID int `form:"movieId" json:"movieId" xml:"movieId"`
	// Movie Name
	MovieName string `form:"movieName" json:"movieName" xml:"movieName"`
}

// Validate validates the Movie media type instance.
func (mt *Movie) Validate() (err error) {

	if mt.MovieName == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "movieName"))
	}
	return
}

// DecodeMovie decodes the Movie instance encoded in resp body.
func (c *Client) DecodeMovie(resp *http.Response) (*Movie, error) {
	var decoded Movie
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
