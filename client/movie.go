// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "fs": movie Resource Client
//
// Command:
// $ goagen
// --design=github.com/sky0621/try-goa/fs
// --out=$(GOPATH)\src\github.com\sky0621\try-goa
// --version=v1.3.0

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
	"strconv"
)

// ShowMoviePath computes a request path to the show action of movie.
func ShowMoviePath(movieID int) string {
	param0 := strconv.Itoa(movieID)

	return fmt.Sprintf("/movies/%s", param0)
}

// Get 1 Movie Information
func (c *Client) ShowMovie(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewShowMovieRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewShowMovieRequest create the request corresponding to the show action endpoint of the movie resource.
func (c *Client) NewShowMovieRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
